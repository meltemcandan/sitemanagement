// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteManagement.DAL.DbContexts;

namespace SiteManagement.DAL.Migrations
{
    [DbContext(typeof(SiteManagementDbContext))]
    partial class SiteManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiteManagement.Model.Entities.BlockEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NumberOfFloors")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.DebtEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DebtTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItPaid")
                        .HasColumnType("bit");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentType")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DebtTypeId");

                    b.ToTable("Debts");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.DebtTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("DebtTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Aidat"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Yakıt"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Elektrik"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Su"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Doğal Gaz"
                        });
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.FlatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<int>("FlatTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.HasIndex("FlatTypeId");

                    b.ToTable("Flats");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.FlatTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FlatTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "1 + 1 Daire"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "2 + 1 Daire"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "3 + 1 Daire"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "4 + 1 Daire"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "4 + 2 Daire"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "6 + 2 Dublex"
                        });
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.MessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LinkedMessageId")
                        .HasColumnType("int");

                    b.Property<int>("MessageStateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.MessageStateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MessageStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Okundu"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Okunmadı"
                        });
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.MonthEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Months");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Ocak"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Şubat"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Mart"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Nisan"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Mayıs"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Haziran"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Temmuz"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Ağustos"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Eylül"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Ekim"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Kasım"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "Aralık"
                        });
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.SiteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarPlate")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FlatId")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<int?>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlatId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.UserPasswordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserPasswords");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.UserTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Daire Sahibi"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Kiracı"
                        });
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.YearEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Years");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "2020"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "2021"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "2022"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "2023"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "2024"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "2025"
                        });
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.BlockEntity", b =>
                {
                    b.HasOne("SiteManagement.Model.Entities.SiteEntity", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.DebtEntity", b =>
                {
                    b.HasOne("SiteManagement.Model.Entities.DebtTypeEntity", "DebtType")
                        .WithMany()
                        .HasForeignKey("DebtTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebtType");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.FlatEntity", b =>
                {
                    b.HasOne("SiteManagement.Model.Entities.BlockEntity", "Block")
                        .WithMany()
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteManagement.Model.Entities.FlatTypeEntity", "FlatType")
                        .WithMany()
                        .HasForeignKey("FlatTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Block");

                    b.Navigation("FlatType");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.MessageEntity", b =>
                {
                    b.HasOne("SiteManagement.Model.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.UserEntity", b =>
                {
                    b.HasOne("SiteManagement.Model.Entities.FlatEntity", "Flat")
                        .WithMany()
                        .HasForeignKey("FlatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteManagement.Model.Entities.UserTypeEntity", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId");

                    b.Navigation("Flat");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.UserPasswordEntity", b =>
                {
                    b.HasOne("SiteManagement.Model.Entities.UserEntity", "User")
                        .WithOne("UserPassword")
                        .HasForeignKey("SiteManagement.Model.Entities.UserPasswordEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SiteManagement.Model.Entities.UserEntity", b =>
                {
                    b.Navigation("UserPassword");
                });
#pragma warning restore 612, 618
        }
    }
}
